{"version":3,"sources":["webpack:///0.index.js","webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["webpackJsonp","./node_modules/pdfjs-dist/build/pdf.worker.js","module","exports","__webpack_require__","process","global","webpackUniversalModuleDefinition","root","factory","define","amd","pdfjsDistBuildPdfWorker","this","modules","installedModules","__w_pdfjs_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","value","unreachable","warn","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","readInt8","log2","loadJpegStream","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isNodeJS","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","deprecated","createObjectURL","createPromiseCapability","createBlob","bytesToString","assert","arraysToBytes","arrayByteLength","FormatError","XRefParseException","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","StreamType","StatTimer","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingPDFException","MissingDataException","MessageHandler","InvalidPDFException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","VERBOSITY_LEVELS","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","undefined","_typeof","Symbol","iterator","obj","constructor","_streams_polyfill","NONE","DECODE","DISPLAY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","errors","warnings","infos","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","verbosity","level","msg","console","log","details","Error","cond","unknown","forms","javaScript","smask","shadingPattern","font","baseUrl","otherUrl","base","URL","origin","e","other","isValidProtocol","url","protocol","absoluteUrl","ex","prop","writable","initializer","lookup","create","NEED_PASSWORD","INCORRECT_PASSWORD","PasswordExceptionClosure","code","message","UnknownErrorExceptionClosure","InvalidPDFExceptionClosure","MissingPDFExceptionClosure","UnexpectedResponseExceptionClosure","status","NotImplementedExceptionClosure","MissingDataExceptionClosure","begin","end","XRefParseExceptionClosure","FormatErrorClosure","AbortExceptionClosure","NullCharactersRegExp","str","replace","bytes","length","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","join","Uint8Array","charCodeAt","arr","byteLength","resultLength","ii","item","itemLength","pos","data","set","x","start","offset","buffer8","view32","Uint32Array","buffer","Function","UtilClosure","rgbBuf","makeCssRgb","Util_makeCssRgb","r","g","b","Util_transform","m1","m2","applyTransform","Util_applyTransform","xt","yt","applyInverseTransform","Util_applyInverseTransform","getAxialAlignedBoundingBox","Util_getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","Util_inverseTransform","apply3dTransform","Util_apply3dTransform","v","singularValueDecompose2dScale","Util_singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","Util_normalizeRect","rect","intersect","Util_intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","Util_toRoman","number","lowerCase","Number","isInteger","romanBuf","romanStr","toLowerCase","appendToArray","Util_appendToArray","arr1","arr2","Array","prependToArray","Util_prependToArray","unshift","extendObj","obj1","obj2","key","getInheritableProperty","Util_getInheritableProperty","dict","getArray","has","inherit","Util_inherit","sub","loadScript","Util_loadScript","src","callback","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","PageViewportClosure","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","PageViewPort_clone","args","convertToViewportPoint","PageViewport_convertToViewportPoint","y","convertToViewportRectangle","PageViewport_convertToViewportRectangle","tl","br","convertToPdfPoint","PageViewport_convertToPdfPoint","PDFStringTranslateTable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","ch","capability","promise","Promise","resolve","reject","StatTimerClosure","rpad","pad","started","times","enabled","time","StatTimer_time","Date","now","timeEnd","StatTimer_timeEnd","toString","StatTimer_toString","out","longest","span","duration","contentType","Blob","type","createObjectURLClosure","digits","forceDataSchema","arguments","blob","b1","b2","b3","d1","d2","d3","d4","resolveCall","fn","thisArg","wrapReason","reason","makeReasonSerializable","resolveOrReject","success","finalize","catch","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","error","action","_sourceName","_targetName","then","postMessage","_createStreamSink","addEventListener","on","actionName","handler","scope","send","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","self","sendStreamRequest","_ref","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref2","deleteStreamController","all","map","destroy","removeEventListener","id","imageUrl","objs","img","Image","loadJpegStream_onloadClosure","onerror","loadJpegStream_onerrorClosure","EOF","Name","NameClosure","nameCache","Name_get","nameValue","Cmd","CmdClosure","cmd","cmdCache","Cmd_get","cmdValue","Dict","DictClosure","nonSerializable","nonSerializableClosure","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","Dict_assignXref","newXref","Dict_get","key1","key2","key3","fetchIfRef","getAsync","Dict_getAsync","fetchIfRefAsync","Dict_getArray","isArray","isRef","fetch","getRaw","Dict_getRaw","getKeys","Dict_getKeys","keys","Dict_set","Dict_has","forEach","Dict_forEach","empty","merge","dictArray","mergedDict","isDict","keyName","Ref","RefClosure","num","gen","Ref_toString","RefSet","RefSetClosure","RefSet_has","ref","put","RefSet_put","remove","RefSet_remove","RefSetCache","RefSetCacheClosure","RefSetCache_get","RefSetCache_has","RefSetCache_put","putAlias","RefSetCache_putAlias","aliasRef","RefSetCache_forEach","clear","RefSetCache_clear","isEOF","isName","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","StreamClosure","arrayBuffer","isEmpty","getByte","Stream_getByte","getUint16","Stream_getUint16","b0","getInt32","Stream_getInt32","Stream_getBytes","strEnd","peekByte","Stream_peekByte","peekedByte","peekBytes","Stream_peekBytes","skip","Stream_skip","reset","Stream_reset","moveStart","Stream_moveStart","makeSubStream","Stream_makeSubStream","StringStreamClosure","DecodeStreamClosure","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","DecodeStream_ensureBuffer","requested","buffer2","DecodeStream_getByte","DecodeStream_getUint16","DecodeStream_getInt32","DecodeStream_getBytes","bufEnd","DecodeStream_peekByte","DecodeStream_peekBytes","DecodeStream_makeSubStream","DecodeStream_skip","DecodeStream_reset","getBaseStreams","DecodeStream_getBaseStreams","StreamsSequenceStreamClosure","streams","streamSequenceStreamReadBlock","shift","newLength","StreamsSequenceStream_getBaseStreams","baseStreams","FlateStreamClosure","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","codeSize","codeBuf","getBits","FlateStream_getBits","bits","getCode","FlateStream_getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","flateStreamGenerateHuffmanTable","lengths","len","val","code2","t","FlateStream_readBlock","hdr","blockLen","check","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","k","PredictorStreamClosure","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","predictorStreamReadBlockTiff","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","j","kk","predictorStreamReadBlockPng","prevRow","up","upLeft","left","pa","pb","pc","DecryptStreamClosure","decrypt","nextChunk","initialized","chunkSize","DecryptStream_readBlock","hasMoreData","Ascii85StreamClosure","input","Ascii85Stream_readBlock","TILDA_CHAR","Z_LOWER_CHAR","AsciiHexStreamClosure","firstDigit","AsciiHexStream_readBlock","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","RunLengthStreamClosure","RunLengthStream_readBlock","repeatHeader","source","LZWStreamClosure","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","LZWStream_readBits","lastCode","LZWStream_readBlock","blockSize","estimatedDecodedSize","decodedSizeDelta","q","prevCode","decodedLength","currentBufferLength","hasPrev","NullStreamClosure","it","store","uid","_Symbol","USE_SYMBOL","$exports","window","__g","core","hide","redefine","ctx","PROTOTYPE","$export","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","target","expProto","own","exp","U","W","R","version","__e","isObject","TypeError","SRC","TO_STRING","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","that","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","ColorSpaceClosure","resizeRgbImage","bpc","w1","h1","w2","h2","alpha01","dest","COMPONENTS","xRatio","yRatio","py","newIndex","oldIndex","xScaled","w1Scanline","floor","getRgb","ColorSpace_getRgb","srcOffset","rgb","getRgbItem","ColorSpace_getRgbItem","destOffset","getRgbBuffer","ColorSpace_getRgbBuffer","count","getOutputLength","ColorSpace_getOutputLength","inputLength","isPassthrough","ColorSpace_isPassthrough","fillRgb","ColorSpace_fillRgb","originalWidth","originalHeight","actualHeight","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","refcs","mode","altIR","altCS","createIR","isDefaultDecode","ColorSpace_isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","AlternateCSClosure","tintFn","defaultColor","Float32Array","tmpBuf","AlternateCS_getRgbItem","AlternateCS_getRgbBuffer","baseNumComps","baseBuf","scaled","tinted","AlternateCS_getOutputLength","AlternateCS_isDefaultDecode","decodeMap","PatternCSClosure","baseCS","IndexedCSClosure","highVal","IndexedCS_getRgbItem","IndexedCS_getRgbBuffer","outputDelta","lookupPos","IndexedCS_getOutputLength","IndexedCS_isDefaultDecode","DeviceGrayCSClosure","DeviceGrayCS_getRgbItem","DeviceGrayCS_getRgbBuffer","DeviceGrayCS_getOutputLength","DeviceGrayCS_isDefaultDecode","DeviceRgbCSClosure","DeviceRgbCS_getRgbItem","DeviceRgbCS_getRgbBuffer","DeviceRgbCS_getOutputLength","DeviceRgbCS_isPassthrough","DeviceRgbCS_isDefaultDecode","DeviceCmykCSClosure","convertToRgb","srcScale","DeviceCmykCS_getRgbItem","DeviceCmykCS_getRgbBuffer","DeviceCmykCS_getOutputLength","DeviceCmykCS_isDefaultDecode","CalGrayCSClosure","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","CalGrayCS_getRgbItem","CalGrayCS_getRgbBuffer","CalGrayCS_getOutputLength","CalGrayCS_isDefaultDecode","CalRGBCSClosure","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","color","adjustToRange","decodeL","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","LMS_Flat","normalizeWhitePointToD65","LMS_D65","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Black","XYZ_D65","SRGB","sR","sG","sB","round","CalRGBCS_getRgbItem","CalRGBCS_getRgbBuffer","CalRGBCS_getOutputLength","CalRGBCS_isDefaultDecode","LabCSClosure","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","LabCS_getRgbItem","LabCS_getRgbBuffer","LabCS_getOutputLength","LabCS_isDefaultDecode","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","px","random","concat","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","iterFn","index","step","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_LENGTH_TO_CACHE","ParserClosure","lexer","allowStreams","recoveryMode","imageCache","refill","Parser_refill","buf1","getObj","buf2","Parser_shift","tryShift","Parser_tryShift","Parser_getObj","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","E","I","SPACE","LF","CR","NUL","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","Parser_findDCTDecodeInlineStreamEnd","foundEOI","markerLength","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","Parser_findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","Parser_findASCIIHexDecodeInlineStreamEnd","Parser_inlineStreamSkipEI","Parser_makeInlineImage","filter","filterName","filterZero","imageStream","adler32","imageBytes","cacheEntry","createStream","cacheKey","Parser_makeStream","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","Parser_filter","makeFilter","filterArray","paramsArray","Parser_makeFilter","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","LexerClosure","knownCommands","specialChars","toHexDigit","Lexer_nextChar","currentChar","peekChar","Lexer_peekChar","getNumber","Lexer_getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","Lexer_getString","numParen","charBuffered","getName","Lexer_getName","previousCh","x2","getHexString","Lexer_getHexString","isFirstHex","secondDigit","Lexer_getObj","comment","knownCommandFound","possibleCommand","Lexer_skipToNextLine","LinearizationCreate","getInt","allowZeroValue","linDict","getHints","hints","hintsLength","parser","obj3","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","ceil","isNaN","shared","ARG","tryGet","T","callee","Constructor","forbiddenField","PromiseCapability","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","KEY","_jpg","JpegStreamClosure","JpegStream_bytes","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","OperatorList","QueueOptimizer","QueueOptimizerClosure","addState","parentState","pattern","checkFn","iterateFn","processFn","handlePaintSolidColorImageMask","iFirstSave","fnArray","argsArray","iFirstPIMXO","arg","imageMask","InitialState","iterateInlineImageGroup","context","iCurr","foundInlineImageGroup","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","iterateImageMaskGroup","foundImageMaskGroup","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","isSameImage","iTransform","transformArgs","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","iFirstPIXO","firstPIXOArg0","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","queue","match","lastProcessed","_optimize","iterate","flush","NullOptimizer","NullOptimizerClosure","OperatorListClosure","CHUNK_SIZE","CHUNK_SIZE_ABOUT","getTransfers","cached","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","addDependency","addDependencies","addOpList","opList","lastChunk","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","SHARED","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","getMethod","proto","values","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","methods","IteratorPrototype","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","ONREADYSTATECHANGE","defer","channel","port","run","listener","nextTick","port2","port1","onmessage","importScripts","removeChild","setTimeout","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","from","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","ChunkedStreamClosure","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","ChunkedStream_getMissingChunks","chunks","ChunkedStream_getBaseStreams","allChunksLoaded","ChunkedStream_allChunksLoaded","onReceiveData","ChunkedStream_onReceiveData","beginChunk","endChunk","curChunk","onReceiveProgressiveData","ChunkedStream_onReceiveProgressiveData","position","ensureByte","ChunkedStream_ensureByte","ensureRange","ChunkedStream_ensureRange","nextEmptyChunk","ChunkedStream_nextEmptyChunk","hasChunk","ChunkedStream_hasChunk","ChunkedStream_getByte","ChunkedStream_getUint16","ChunkedStream_getInt32","ChunkedStream_getBytes","ChunkedStream_peekByte","ChunkedStream_peekBytes","getByteRange","ChunkedStream_skip","ChunkedStream_reset","ChunkedStream_moveStart","ChunkedStream_makeSubStream","ChunkedStreamSubstream","missingChunks","subStream","ChunkedStreamManagerClosure","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","ChunkedStreamManager_getLoadedStream","sendRequest","ChunkedStreamManager_sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","readChunk","read","chunkData","requestAllChunks","ChunkedStreamManager_requestAllChunks","_requestChunks","ChunkedStreamManager_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","ChunkedStreamManager_getStream","requestRange","ChunkedStreamManager_requestRange","getBeginChunk","getEndChunk","requestRanges","ChunkedStreamManager_requestRanges","ranges","indexOf","ChunkedStreamManager_groupChunks","groupedChunks","prevChunk","ChunkedStreamManager_onProgress","bytesLoaded","total","ChunkedStreamManager_onReceiveData","isProgressive","loadedRequests","requestIds","onError","ChunkedStreamManager_onError","err","ChunkedStreamManager_getBeginChunk","ChunkedStreamManager_getEndChunk","abort","ChunkedStreamManager_abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_i","_s","_parser","_chunked_stream","_crypto","_colorspace","CatalogClosure","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","Catalog_readDocumentOutline","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","dests","nameTreeRef","nameDictionaryRef","catalogForEach","nameTree","NameTree","names","getAll","getDestination","Catalog_getDestination","destinationId","pageLabels","readPageLabels","Catalog_readPageLabels","style","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","Catalog_cleanup","promises","translatedFonts","translated","getPage","Catalog_getPage","getPageDict","createPage","Catalog_getPageDict","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","Catalog_getPageIndex","pageRef","pagesBeforeRef","kidRef","parentRef","node","kidPromises","kid","Catalog_parseDestDictionary","addDefaultProtocolToUrl","tryConvertUrlEncoding","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","href","XRefClosure","xrefstms","cache","fontTypes","setStartXRef","XRef_setStartXRef","startXRef","startXRefQueue","XRef_parse","trailerDict","readXRef","indexObjects","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","XRef_processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","XRef_readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","XRef_processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","XRef_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","XRef_indexObjects","TAB","PERCENT","LT","readToken","token","skipUntil","dataLength","objRegExp","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","contentLength","content","xrefTagOffset","XRef_readXRef","startXRefParsedCache","topDict","getEntry","XRef_getEntry","xrefEntry","XRef_fetchIfRef","XRef_fetch","fetchUncompressed","fetchCompressed","XRef_fetchUncompressed","parseInt","substring","createCipherTransform","XRef_fetchCompressed","tableOffset","XRef_fetchIfRefAsync","XRef_fetchAsync","streamManager","tryFetch","XRef_getCatalogObj","NameOrNumberTree","NameOrNumberTreeClosure","NameOrNumberTree_getAll","_type","NameOrNumberTree_get","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","NameTreeClosure","NumberTreeClosure","FileSpecClosure","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","ArithmeticDecoder","ArithmeticDecoderClosure","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","ArithmeticDecoder_byteIn","readBit","ArithmeticDecoder_readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","JpxErrorClosure","JpxImageClosure","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","JpxImage_parse","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","JpxImage_parseImageProperties","newByte","oldByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","componentsCount","JpxImage_parseCodestream","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","mainHeader","siz","XTsiz","YTsiz","XTOsiz","YTOsiz","components","component","precision","isSigned","XRsiz","YRsiz","calculateComponentDimensions","SIZ","calculateTileGrids","QCC","COC","qcd","noQuantization","guardBits","spqcd","epsilon","mu","SPqcds","QCD","currentTile","qcc","cqcc","cod","scod","entropyCoderWithCustomPrecincts","sopMarkerUsed","ephMarkerUsed","progressionOrder","layersCount","multipleComponentTransform","decompositionLevelsCount","xcb","ycb","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","segmentationSymbolUsed","reversibleTransformation","precinctsSizes","precinctsSize","PPx","PPy","unsupported","COD","partIndex","partsCount","initializeTile","buildPackets","parseTilePackets","tiles","transformComponents","x0","x1","y0","y1","numXtiles","numYtiles","tx0","ty0","tx1","ty1","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","xcb_","ycb_","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","codeblock","precinctNumber","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","codingStyleDefaultParameters","maxDecompositionLevelsCount","nextPacket","JpxImage_nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","blocksDimensions","bscale","resolutionSubbands","packetsIterator","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","valueReady","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","nextLevel","included","incrementValue","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","nb","interleave","row","levelOffset","transformTile","quantizationParameters","ReversibleTransform","IrreversibleTransform","subbandCoefficients","gainLog2","calculate","top","resultImages","transformedTiles","tile0","Uint8ClampedArray","y2","fourComponents","y0items","y1items","y2items","y3items","component0","qcdOrQcc","TagTreeClosure","levelsLength","levels","TagTree_reset","currentLevel","TagTree_incrementValue","TagTree_nextLevel","InclusionTreeClosure","defaultValue","InclusionTree_reset","stopValue","propagateValues","InclusionTree_incrementValue","InclusionTree_propagateValues","levelIndex","currentValue","InclusionTree_nextLevel","BitModelClosure","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","BitModel_setDecoder","BitModel_reset","Int8Array","setNeighborsSignificance","BitModel_setNeighborsSignificance","column","BitModel_runSignificancePropagationPass","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","decodeSignBit","BitModel_decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","BitModel_runMagnitudeRefinementPass","width4","index0","indexNext","significance","bit","BitModel_runCleanupPass","oneRowDown","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","BitModel_checkSegmentationSymbol","symbol","Transform","TransformClosure","transformCalculate","u0","v0","ll","extend","j1","j2","Transform_iterate","hl_lh_hh","llWidth","llHeight","llItems","u","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","IrreversibleTransformClosure","irreversibleTransformFilter","current","alpha","beta","K","K_","ReversibleTransformClosure","reversibleTransformFilter","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","ARCFourCipherClosure","tmp","keyLength","encryptBlock","ARCFourCipher_encryptBlock","tmp2","output","decryptBlock","calculateMD5Closure","hash","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","Word64Closure","highInteger","lowInteger","high","low","and","Word64_and","word","xor","Word64_xor","or","Word64_or","shiftRight","Word64_shiftRight","places","shiftLeft","Word64_shiftLeft","rotateRight","Word64_rotateRight","not","Word64_not","add","Word64_add","lowAdd","highAdd","copyTo","Word64_copyTo","assign","Word64_assign","calculateSHA256Closure","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","calculateSHA512Closure","mode384","tmp1","tmp3","calculateSHA384Closure","NullCipher","NullCipherClosure","NullCipher_decryptBlock","AES128CipherClosure","rcon","inv_s","mixCol","mix","expandKey128","cipherKey","t3","t4","decrypt128","s0","s1","s2","s3","encrypt128","bufferPosition","decryptBlock2","sourceLength","iv","plain","outputLength","lastBlock","psLen","AES128Cipher_decryptBlock","AES128Cipher_encrypt","cipher","AES256CipherClosure","expandKey256","decrypt256","encrypt256","AES256Cipher_decryptBlock","AES256Cipher_encrypt","PDF17Closure","compareByteArrays","array1","array2","checkOwnerPassword","PDF17_checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","PDF17_checkUserPassword","userValidationSalt","userPassword","getOwnerKey","PDF17_getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","PDF17_getUserKey","userKeySalt","userEncryption","PDF20Closure","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","PDF20_hash","concatBytes","PDF20_checkOwnerPassword","PDF20_checkUserPassword","PDF20_getOwnerKey","PDF20_getUserKey","CipherTransform","CipherTransformClosure","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","CipherTransform_createStream","cipherTransformDecryptStream","CipherTransform_decryptString","CipherTransformFactoryClosure","defaultPasswordBytes","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","hashDataSize","keyLengthInBytes","encryptionKey","checkData","derivedKey","decodeUserPassword","identityName","algorithm","cfDict","streamCryptoName","handlerDict","fileIdBytes","passwordBytes","decodedPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cryptFilter","cfm","cipherTransformFactoryBuildCipherConstructorNone","cipherTransformFactoryBuildCipherConstructorV2","cipherTransformFactoryBuildCipherConstructorAESV2","cipherTransformFactoryBuildCipherConstructorAESV3","CipherTransformFactory_createCipherTransform","cipherConstructor","buildCipherCipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","MAX_SUBR_NESTING","CFFParserClosure","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack_div","stack","file","properties","seacAnalysisEnabled","CFFParser_parse","cff","header","parseHeader","nameIndex","parseIndex","endPos","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","fontBBox","ascent","descent","ascentScaled","charset","encoding","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","CFFParser_parseHeader","bytesLength","major","minor","hdrSize","offSize","CFFParser_parseDict","parseOperand","parseFloatOperand","NaN","parseFloat","operands","CFFParser_parseIndex","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","CFFParser_parseNameIndex","CFFParser_parseStringIndex","CFFParser_createDict","Type","cffDict","pair","setByKey","parseCharString","CFFParser_parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","valid","firstStackClearing","charstring","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","CFFParser_emptyPrivateDictionary","parentDict","CFFParser_parsePrivateDict","privateOffset","removeByName","privateDictEnd","dictData","subrsOffset","relativeOffset","CFFParser_parseCharsets","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","CFFParser_parseEncoding","predefined","readSupplement","supplementsCount","sid","baseEncoding","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","CFFParser_parseFDSelect","invalidFirstGID","CFFFDSelect","CFFClosure","CFFHeaderClosure","CFFStringsClosure","CFFStrings_get","CFFStrings_add","CFFIndexClosure","objects","CFFIndex_add","CFFIndex_set","CFFIndex_get","CFFDict","CFFDictClosure","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","CFFDict_setByKey","valueLength","setByName","CFFDict_setByName","CFFDict_hasName","CFFDict_getByName","CFFDict_removeByName","createTables","CFFDict_createTables","layout","CFFTopDictClosure","CFFPrivateDictClosure","CFFCharsetClosure","CFFEncodingClosure","CFFFDSelectClosure","CFFFDSelect_get","glyphIndex","CFFOffsetTracker","CFFOffsetTrackerClosure","isTracking","CFFOffsetTracker_isTracking","track","CFFOffsetTracker_track","location","CFFOffsetTracker_offset","setEntryLocation","CFFOffsetTracker_setEntryLocation","offset0","offset1","offset2","offset3","offset4","CFFCompilerClosure","compile","CFFCompiler_compile","CFFCompiler_add","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","CFFCompiler_encodeNumber","encodeInteger","encodeFloat","CFFCompiler_encodeFloat","nibbles","substr","CFFCompiler_encodeInteger","CFFCompiler_compileHeader","CFFCompiler_compileNameIndex","sanitizedName","char","CFFCompiler_compileTopDicts","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","CFFCompiler_compilePrivateDicts","privateDictTracker","privateDictData","subrs","CFFCompiler_compileDict","offsetTracker","CFFCompiler_compileStringIndex","compileGlobalSubrIndex","CFFCompiler_compileGlobalSubrIndex","writeByteArray","CFFCompiler_compileCharStrings","CFFCompiler_compileCharset","compileTypedArray","CFFCompiler_compileEncoding","CFFCompiler_compileFDSelect","CFFCompiler_compileTypedArray","CFFCompiler_compileIndex","lastOffset","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","mapSpecialUnicodeValues","getUnicodeForGlyph","glyphsUnicodeMap","unicode","nameLen","hexStr","toUpperCase","UnicodeRanges","getUnicodeRangeFor","isRTLRangeFor","getNormalizedUnicodes","reverseIfRtl","chars","charsLength","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_ps_parser","_classCallCheck","instance","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","createFromArray","fnObj","parseArray","PDFFunctionClosure","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeNum","typeFn","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","samples","_ref7","interpolate","xmin","xmax","ymin","ymax","constructSampledFromIRResult","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","constructInterpolatedFromIRResult","_ref10","fnRefs","fns","bounds","_ref11","fnsIR","constructStichedFromIRResult","constructStichedFromIRClip","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","MAX_CACHE_SIZE","cache_available","constructPostScriptFromIRResult","cachedValue","execute","stackIndex","bound","fnDict","PostScriptStack","PostScriptStackClosure","MAX_STACK_SIZE","initialStack","PostScriptStack_push","PostScriptStack_pop","copy","PostScriptStack_copy","PostScriptStack_index","roll","PostScriptStack_roll","PostScriptEvaluatorClosure","operators","PostScriptEvaluator_execute","operator","atan","cos","LN10","sin","PostScriptCompilerClosure","AstNode","visit","visitor","AstArgument","visitArgument","AstLiteral","visitLiteral","AstBinaryOperation","op","arg1","arg2","visitBinaryOperation","AstMin","visitMin","AstVariable","visitVariable","AstVariableDefinition","variable","visitVariableDefinition","ExpressionBuilderVisitor","parts","literal","operation","definition","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","PostScriptCompiler_compile","instructions","lastRegister","ast1","ast2","tmpVar","instruction","statementBuilder","expr","pdfjsVersion","pdfjsBuild","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","WorkerTaskClosure","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","PDFWorkerStreamClosure","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","getFullReader","PDFWorkerStreamReader","reader","PDFWorkerStreamRangeReader","readers","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","headersReady","setup","testMessageProcessed","wphSetupTest","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","wphConfigure","wphSetupDoc","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","workerVersion","docId","workerHandlerName","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","ensureDoc","fingerprintPromise","encryptedPromise","ensureXRef","onDocReady","results","doc","fingerprint","encrypted","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","flushChunks","pdfFile","readPromise","setupDoc","onSuccess","pdfInfo","onFailure","updatePassword","pdfManagerReady","loadFailure","requestLoadedStream","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","wphSetupGetPage","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","userUnit","view","wphSetupGetPageIndex","catalog","pdfDocument","wphSetupGetDestinations","ensureCatalog","wphSetupGetDestination","wphSetupGetPageLabels","wphSetupGetPageMode","wphSetupGetAttachments","wphSetupGetJavaScript","wphSetupGetOutline","wphSetupGetMetadata","wphSetupGetData","wphSetupGetStats","wphSetupGetAnnotations","wphSetupRenderPage","pageNum","getOperatorList","renderInteractiveForms","featureId","minimumStackMessage","wrappedException","wphExtractText","sink","extractTextContent","normalizeWhitespace","combineTextItems","wphCleanup","wphTerminate","waitOn","wphReady","initializeFromPort","isMessagePort","maybePort","PDFJS","compatibilityChecked","globalScope","userAgent","navigator","isAndroid","isAndroidPre5","isChrome","isIOSChrome","isIE","isIOS","isSafari","hasDOM","normalizeURLObject","webkitURL","checkXMLHttpRequestResponseCompatibility","xhrPrototype","xmlHttpRequestOverrideMimeType","mimeType","xmlHttpRequestGetResponseType","_responseType","xmlHttpRequestSetResponseType","overrideMimeType","xmlHttpRequestResponseGet","responseText","text","checkDatasetProperty","div","HTMLElement","_dataset","dataset","attributes","attribute","checkOnBlobSupport","checkNavigatorLanguage","locale","userLanguage","checkRangeRequests","disableRange","disableStream","checkSetPresenceInImageData","CanvasPixelArray","polyfill","versionMatch","contextPrototype","CanvasRenderingContext2D","createImageData","imageData","checkCanvasSizeLimitation","maxCanvasPixels","checkFullscreenSupport","disableFullscreen","checkCurrentScript","scripts","checkInputTypeNumberAssign","inputProto","typeProperty","getOwnPropertyDescriptor","checkDocumentReadyState","attachEvent","documentProto","readyStateProto","checkChildNodeRemove","Element","parentNode","checkObjectValues","checkArrayIncludes","includes","checkNumberIsNaN","checkNumberIsInteger","checkPromise","checkWeakMap","WeakMap","checkURLConstructor","hasWorkingUrl","pathname","relative","relativePathDotMapping","isRelativeScheme","scheme","invalid","_isInvalid","IDNAToASCII","percentEscape","percentEscapeQuery","ALPHA","ALPHANUMERIC","stateOverride","cursor","seenAt","seenBracket","loop","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","_password","nextC","nextNextC","cp","tempC","temp","JURL","_url","authority","host","hostname","search","_","OriginalURL","revokeObjectURL","$values","isEnum","isEntries","arrayIndexOf","IE_PROTO","$includes","isFinite","$at","iterated","point","dPs","Empty","_createDict","iframe","lt","gt","iframeDocument","display","contentWindow","open","write","Properties","ObjectProto","addToUnscopables","_k","Arguments","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","$Promise","isNode","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","_catch","remaining","$index","alreadyCalled","race","ret","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","_finally","onFinally","try","_try","each","weak","fails","validate","WEAK_MAP","uncaughtFrozenStore","ufstore","InternalMap","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","_delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","setPrototypeOf","buggy","__proto__","gOPD","COLLECTION","of","mapFn","mapping","cb","nextItem","isReadableStreamSupported","_typeof2","_require","IsPropertyKey","argument","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","Infinity","Call","V","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","RangeError","ValidateAndNormalizeQueuingStrategy","rethrowAssertionErrorRejection","AssertionError","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamCloseQueuedOrInFlight","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","__abortSteps","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","_ownerWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","_readyPromise","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","releaseLock","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","WritableStreamDefaultControllerGetChunkSize","WritableStreamDefaultControllerWrite","_controlledWritableStream","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategySize","_strategyHWM","WritableStreamDefaultControllerGetBackpressure","IsWritableStreamDefaultController","startResult","WritableStreamDefaultControllerAdvanceQueueIfNeeded","strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","writeRecord","enqueueE","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","sinkWritePromise","_closedPromise_resolve","_closedPromise_reject","_readyPromise_resolve","_readyPromise_reject","container","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","typeString","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","AcquireReadableStreamBYOBReader","pipeThrough","options","readable","pipeTo","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","pipeLoop","ReadableStreamDefaultReaderRead","isOrBecomesErrored","shutdownWithAction","shutdown","isOrBecomesClosed","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","newError","isError","ReadableStreamReaderGenericRelease","tee","branches","ReadableStreamTee","IsReadableStreamDisturbed","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamBYOBReader","ReadableStreamDefaultReader","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","create_ReadableStreamTeePullFunction","_teeState","_cloneForBranch2","cancel1","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","_branch1","_branch2","branch1","branch2","value1","value2","compositeReason","cancelResult","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","sourceCancelPromise","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadIntoRequest","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","ArrayBuffer","isView","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","ReadableByteStreamControllerPullInto","__pullSteps","_controlledReadableStream","_underlyingSource","_closeRequested","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","shouldPull","ReadableStreamDefaultControllerShouldCallPull","pullPromise","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","respond","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespond","respondWithNewView","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerError","byteStreamControllerBrandCheckException","ReadableByteStreamControllerClose","ReadableByteStreamControllerEnqueue","firstDescriptor","bytesFilled","ReadableByteStreamControllerHandleQueueDrain","byteOffset","viewE","bufferE","pullIntoDescriptor","elementSize","ctor","readerType","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","DataView","BYTES_PER_ELEMENT","emptyView","ReadableByteStreamControllerRespondInClosedState","ReadableByteStreamControllerRespondInReadableState","remainderSize","ReadableByteStreamControllerRespondInternal","firstPendingPullInto","transferredBuffer","transferredView","transformStream","writableStream","TransformStream","TransformStreamCloseReadable","_errored","_readableClosed","TransformStreamCloseReadableInternal","TransformStreamEnqueueToReadable","_readableController","TransformStreamErrorIfNeeded","maybeBackpressure","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","TransformStreamTransform","_transforming","transformer","_transformer","_transformStreamController","transformPromise","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","flushPromise","TransformStreamSource","TransformStreamDefaultController","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","BasePdfManagerClosure","_docId","_docBaseUrl","BasePdfManager_onLoadedStream","BasePdfManager_ensureDoc","BasePdfManager_ensureXRef","BasePdfManager_ensureCatalog","BasePdfManager_getPage","BasePdfManager_cleanup","BasePdfManager_ensure","BasePdfManager_requestRange","BasePdfManager_requestLoadedStream","BasePdfManager_sendProgressiveData","BasePdfManager_updatePassword","BasePdfManager_terminate","LocalPdfManagerClosure","PDFDocument","LocalPdfManager_ensure","LocalPdfManager_requestRange","LocalPdfManager_requestLoadedStream","LocalPdfManager_onLoadedStream","LocalPdfManager_terminate","NetworkPdfManagerClosure","NetworkPdfManager_ensure","ensureHelper","NetworkPdfManager_requestRange","NetworkPdfManager_requestLoadedStream","NetworkPdfManager_sendProgressiveData","NetworkPdfManager_onLoadedStream","NetworkPdfManager_terminate","Page","_obj","_annotation","_operator_list","_evaluator","_function","PageClosure","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","getPageProp","Page_getPageProp","getInheritedPageProp","Page_getInheritedPageProp","valueArray","MAX_LOOP_COUNT","resources","mediaBox","cropBox","intersection","getContentStream","Page_getContentStream","loadResources","Page_loadResources","objectLoader","contentStreamPromise","partialEvaluator","PartialEvaluator","dataPromises","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","Page_getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","PDFDocumentClosure","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","PDFDocument_parse","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","PDFDocument_checkHeader","MAX_VERSION_LENGTH","parseStartXRef","PDFDocument_parseStartXRef","PDFDocument_setup","documentInfo","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","infoDict","validEntries","fileID","idArray","hex","PDFDocument_getPage","PDFDocument_cleanup","_ccitt","CCITTFaxStreamClosure","ccittFaxDecoder","CCITTFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","readNextChar","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","_jbig","Jbig2StreamClosure","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","Jbig2ErrorClosure","Jbig2ImageClosure","ContextCache","getContexts","DecodingContext","contextCache","decodeInteger","procedure","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","j0","sltp","decodeRefinement","referenceBitmap","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","newSymbols","currentHeight","symbolCodeLength","deltaHeight","currentWidth","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","stripT","firstS","deltaT","deltaFirstS","currentS","currentT","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","offsetT","offsetS","symbolRow","maxWidth","deltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","collectiveBitmap","patterns","patternBitmap","xMin","xMax","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2","numberOfPages","parseJbig2Chunks","SimpleSegmentVisitor","onPageInformation","SimpleSegmentVisitor_onPageInformation","currentPageInfo","drawBitmap","SimpleSegmentVisitor_drawBitmap","regionInfo","mask0","mask","onImmediateGenericRegion","SimpleSegmentVisitor_onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","SimpleSegmentVisitor_onImmediateLosslessGenericRegion","onSymbolDictionary","SimpleSegmentVisitor_onSymbolDictionary","currentSegment","referredSegments","onImmediateTextRegion","SimpleSegmentVisitor_onImmediateTextRegion","onImmediateLosslessTextRegion","SimpleSegmentVisitor_onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","Jbig2Image_parseChunks","JpegError","JpegErrorClosure","JpegImageClosure","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","children","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACState","successiveACNextValue","decodeACSuccessive","decodeMcu","mcu","mcuRow","mcuCol","blockRow","blockCol","decodeBlock","componentsLength","decodeFn","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","qt","quantizationTable","v3","v4","v5","v6","v7","p0","p5","p6","p7","buildComponentData","computationBuffer","Int16Array","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","convertYccToRgb","Cb","Cr","_convertYcckToRgb","convertYcckToRgb","_convertYcckToCmyk","convertYcckToCmyk","_convertCmykToRgb","convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","JpxStreamClosure","JpxStream_bytes","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","getTransformMatrix","bbox","maxY","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","_hasFlag","flag","_isViewable","_isPrintable","hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","_preparePopup","hasPopup","contents","renderForms","appearanceDict","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","validNumber","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","DEFAULT_ICON_SIZE","_this6","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","PartialEvaluatorClosure","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","canDecode","image","isDecodable","colorSpace","decodePromise","isSupported","_ref2$options","fetchBuiltInCMap","cachedCMap","compressionType","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","TimeSlotManager","TimeSlotManager_check","checked","endTime","TimeSlotManager_reset","normalizeBlendMode","deferred","TILING_PATTERN","SHADING_PATTERN","newOptions","newEvaluator","PartialEvaluator_hasBlendModes","nodes","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","PartialEvaluator_buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","PartialEvaluator_buildPaintImageXObject","inline","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","SMALL_IMAGE_DIMENSIONS","imageObj","nativeImageDecoder","buildImage","nativeDecoder","handleSMask","PartialEvaluator_handleSmask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","PartialEvaluator_handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","PartialEvaluator_handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","PartialEvaluator_setGState","gState","gStateObj","gStateKeys","_loop","PartialEvaluator_loadFont","errorFont","fontRes","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontID","fontAliases","aliasFontRef","Font","getFontID","translatedPromise","translateFont","translatedFont","fontType","xrefFontStats","fontFile3","getFontType","PartialEvaluator_buildPath","lastIndex","opArgs","handleColorN","PartialEvaluator_handleColorN","patternName","shading","Pattern","parseShading","_ref3$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","_ref4$seenStyles","seenStyles","TextState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","textState","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","replaceWhitespace","runBidiTransform","textChunk","bidiResult","bidi","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","PartialEvaluator_extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","PartialEvaluator_buildToUnicode","hasIncludedToUnicodeMap","charcode","glyphName","ToUnicodeMap","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","PartialEvaluator_readToUnicode","cmapObj","cmap","getMap","charCode","PartialEvaluator_readCidToGidMap","cidToGidStream","glyphsData","glyphID","extractWidths","PartialEvaluator_extractWidths","glyphsWidths","glyphsVMetrics","defaultVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","PartialEvaluator_isSerifFont","fontNameWoStyle","PartialEvaluator_getBaseFontMetrics","monospace","stdFontMap","lookupName","Metrics","getMetrics","glyphWidths","PartialEvaluator_bulildCharCodeToWidth","widthsByGlyphName","PartialEvaluator_preEvaluateFont","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","PartialEvaluator_translateFont","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cMapPromise","cidEncoding","TranslatedFontClosure","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","StateManagerClosure","stateStack","old","TextStateClosure","TextState_setTextMatrix","TextState_translateTextMatrix","TextState_calcTextLineMatrixAdvance","txDiff","tyDiff","denominator","calcRenderMatrix","TextState_calcRendeMatrix","TextState_carriageReturn","TextState_clone","EvalStateClosure","CanvasExtraState_clone","EvaluatorPreprocessorClosure","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","EvaluatorPreprocessor_read","opSpec","argsLength","preprocessCommand","EvaluatorPreprocessor_preprocessCommand","CMap","BUILT_IN_CMAPS","CMapClosure","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","IdentityCMapClosure","BinaryCMapReader","BinaryCMapReaderClosure","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","processBinaryCMap","sequence","dataSize","ucs2DataSize","subitemsCount","CMapFactoryClosure","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","adjustToUnicode","builtInEncoding","amend","recoverGlyphName","Glyph","GlyphClosure","operatorListId","isInFont","matchesForCache","ToUnicodeMapClosure","IdentityToUnicodeMapClosure","OpenTypeFileBuilder","OpenTypeFileBuilderClosure","writeInt16","writeInt32","writeData","sfnt","getSearchParams","OpenTypeFileBuilder_getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","toArray","OpenTypeFileBuilder_toArray","tablesNames","numTables","tableName","tableOffsets","searchParams","checksum","quad","addTable","OpenTypeFileBuilder_addTable","FontClosure","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","ID","Font_getFontID","int16","writeSignedInt16","signedInt16","int32","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","fontGetRangesSort","codeIndices","createCmapTable","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","FontRendererFactory","Font_exportData","Font_fallbackToSystemFont","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","unicodeCharCode","Font_checkAndRepair","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","readCmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","firstCode","sanitizeMetrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","endPoint","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","sanitizeHead","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeGlyphLocations","loca","isGlyphLocationsLong","dupFirstEntry","maxSizeOfInstructions","itemSize","itemDecode","itemEncode","fontItemDecodeLong","fontItemEncodeLong","fontItemDecode","fontItemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readNameTable","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsUsed","functionsStackDeltas","functionsDefined","stackTop","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","VALID_TABLES","cffFile","isTrueType","maxZones","glyphsInfo","metricsOverride","hasGlyph","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","compiler","namePrototype","builder","tableTag","Font_convert","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","fontFieldsHmtx","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","Font_charToGlyph","widthCode","Font_charsToGlyphs","charsCache","charsCacheKey","ErrorFontClosure","ErrorFont_charsToGlyphs","ErrorFont_exportData","type1FontGlyphMapping","Type1FontClosure","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","EEXEC_SIGNATURE","streamStartPos","headerBytes","headerBytesLength","block","SCAN_BLOCK_LENGTH","actualLength","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","Type1Parser","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","Type1Font_getCharset","Type1Font_getGlyphMapping","Type1Font_getSeacs","Type1Font_getType2Charstrings","type1Charstrings","Type1Font_getType2Subrs","type1Subrs","type2Subrs","Type1Font_wrap","charsetArray","charStringsIndex","field","privateData","subrIndex","CFFFontClosure","CFFFont_getCharset","CFFFont_getGlyphMapping","charsets","checkSeacSupport","checkChromeWindows","FontRendererFactoryClosure","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","parseGlyfTable","lookupCmap","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","startPoint","contour","compileCharString","stems","bezierCurveTo","stackClean","xb","yb","y3","subrCode","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","noop","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","compileGlyph","compileGlyphImpl","TrueTypeCompiled","Type2Compiled","cffInfo","FontRendererFactory_create","HINTING_ENABLED","Type1CharString","Type1CharStringClosure","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","lsb","flexing","Type1CharString_convert","encoded","wx","sbx","executeCommand","dy","sby","flexArgs","howManyArgs","command","keepStack","stackLength","Type1ParserClosure","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","isHexDigit","discardNumber","c2","decrypted","decryptAscii","digit1","digit2","isSpecial","isBinary","readNumberArray","Type1Parser_readNumberArray","getToken","Type1Parser_readNumber","readInt","Type1Parser_readInt","readBoolean","Type1Parser_readBoolean","Type1_nextChar","Type1Parser_getToken","readCharStrings","Type1Parser_readCharStrings","lenIV","Type1Parser_extractFontProgram","program","blueArray","charString","Type1Parser_extractFontHeader","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","PatternClosure","getPattern","Pattern_getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","RadialAxialClosure","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","colorStops","ratio","cssColor","background","RadialAxial_getIR","r0","MeshClosure","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","MeshStreamReader_readBits","align","MeshStreamReader_align","readFlag","MeshStreamReader_readFlag","bitsPerFlag","readCoordinate","MeshStreamReader_readCoordinate","bitsPerCoordinate","yi","readComponents","MeshStreamReader_readComponents","ci","decodeType4Shading","mesh","coords","ps","verticesLeft","coord","figures","decodeType5Shading","verticesPerRow","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","getBClosure","buildB","lut","t_","buildFigureFromPatch","figure","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","figureCoords","figureColors","cl","cr","c3","bRow","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","packData","coordsPacked","xy","colorsPacked","decodeContext","patchMesh","Mesh_getIR","DummyClosure","Dummy_getIR","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","PostScriptParserClosure","nextToken","PostScriptParser_nextToken","accept","PostScriptParser_accept","expect","PostScriptParser_expect","PostScriptParser_parse","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","PostScriptParser_parseBlock","NUMBER","OPERATOR","parseCondition","PostScriptParser_parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","PostScriptTokenClosure","opCache","getOperator","PostScriptToken_getOperator","opValue","PostScriptLexerClosure","PostScriptLexer_nextChar","PostScriptLexer_getToken","PostScriptLexer_getNumber","MurmurHash3_64Closure","seed","MASK_HIGH","MASK_LOW","SEED","MurmurHash3_64_update","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","MurmurHash3_64_hexdigest","PDFImageClosure","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","maskDict","_ref2$nativeDecoder","imagePromise","smaskPromise","maskPromise","smaskData","maskData","computedLength","haveFullData","decodeBuffer","getComponents","bufferPos","rowComps","buf","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","maybeUndoPreblend"],"mappings":"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CAA,GAAA,eACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,kBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,iBACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,GAAA,iBACAA,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AA,GAAA,WACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,YACAA,GAAA,aACAA,GAAA,YACA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AAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,MACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,OACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,SACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,SACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,UACAA,GAAA,UACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,QACAA,GAAA,UACAA,GAAA,SACAA,GAAA,SACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,QACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,SACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,WACAA,GAAA,WACAA,GAAA,WACAA,GAAA,WACAA,GAAA,WACAA,GAAA,WACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA,UACAA,GAAA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cACAA,GAAA,eACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,wBACAA,GAAA,8BACAA,GAAA,wBACAA,GAAA,8BACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,eACAA,GAAA,oCACAA,GAAA,eACAA,GAAA,cACAA,GAAA,eACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,0BACAA,GAAA,4CACAA,GAAA,sCACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,mBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,oBACAA,GAAA,cACAA,GAAA,cACAA,GAAA,cACAA,GAAA,eACAA,GAAA,eACAA,GAAA,mBACAA,GAAA,cACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,yBACAA,GAAA,yBACAA,GAAA,yBACAA,GAAA,yBACAA,GAAA,yBACAA,GAAA,yBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,8BACAA,GAAA,8BACAA,GAAA,8BACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wBACAA,GAAA,wkBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,aACAA,GAAA,aACAA,GAAA,aACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,kBACAA,GAAA,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","file":"0.index.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"./node_modules/pdfjs-dist/build/pdf.worker.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 71);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(73);\n\nvar _streams_polyfill = __w_pdfjs_require__(121);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n  verbosity = level;\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  var n = 1,\n      i = 0;\n  while (x > n) {\n    n <<= 1;\n    i++;\n  }\n  return i;\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return getArray ? dict.getArray(name) : dict.get(name);\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar StatTimer = function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length) {\n      str += pad;\n    }\n    return str;\n  }\n  function StatTimer() {\n    this.started = Object.create(null);\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (name in this.started) {\n        warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (!(name in this.started)) {\n        warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  };\n  img.onerror = function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  };\n  img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(47)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(5).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(10);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar createDesc = __w_pdfjs_require__(28);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(44);\nvar toPrimitive = __w_pdfjs_require__(45);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(29);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    throw new Error('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      throw new Error('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      throw new Error('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      throw new Error('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\n    if ((0, _primitives.isName)(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if ((0, _primitives.isDict)(colorSpaces)) {\n        var refcs = colorSpaces.get(cs.name);\n        if (refcs) {\n          cs = refcs;\n        }\n      }\n    }\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(78);\nvar enumBugKeys = __w_pdfjs_require__(48);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(15).f;\nvar has = __w_pdfjs_require__(9);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(97);\nvar isArrayIter = __w_pdfjs_require__(98);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(99);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(125);\n\nvar _jbig2_stream = __w_pdfjs_require__(127);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(130);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(5).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(47)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(10);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(9);\nvar setDesc = __w_pdfjs_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(129);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getBytes = function (length) {\n    this.readBlock();\n    return this.buffer;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(27)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(17);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(79);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(35);\nvar test = {};\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(10)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(90);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar getPrototypeOf = __w_pdfjs_require__(93);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(5).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(94);\nvar getKeys = __w_pdfjs_require__(23);\nvar redefine = __w_pdfjs_require__(10);\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(4);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(16);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(100);\nvar html = __w_pdfjs_require__(53);\nvar cel = __w_pdfjs_require__(27);\nvar global = __w_pdfjs_require__(5);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(18)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(38);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(29);\nvar toObject = __w_pdfjs_require__(36);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(107);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _chunked_stream = __w_pdfjs_require__(62);\n\nvar _crypto = __w_pdfjs_require__(66);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    throw new Error('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(64);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 1]\n                };\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(135);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(141);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    throw new Error('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.169';\nvar pdfjsBuild = 'fbf456f5';\nvar pdfjsCoreWorker = __w_pdfjs_require__(72);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(123);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.169';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        var numPagesPromise = pdfManager.ensureDoc('numPages');\n        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\n          var doc = {\n            numPages: results[0],\n            fingerprint: results[1],\n            encrypted: !!results[2]\n          };\n          loadDocumentCapability.resolve(doc);\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n  var globalScope = __w_pdfjs_require__(74);\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n  var isAndroid = /Android/.test(userAgent);\n  var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n  var isChrome = userAgent.indexOf('Chrom') >= 0;\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n  var isIE = userAgent.indexOf('Trident') >= 0;\n  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  if (typeof PDFJS === 'undefined') {\n    globalScope.PDFJS = {};\n  }\n  PDFJS.compatibilityChecked = true;\n  (function normalizeURLObject() {\n    if (!globalScope.URL) {\n      globalScope.URL = globalScope.webkitURL;\n    }\n  })();\n  (function checkXMLHttpRequestResponseCompatibility() {\n    if (typeof XMLHttpRequest === 'undefined') {\n      return;\n    }\n    var xhrPrototype = XMLHttpRequest.prototype;\n    var xhr = new XMLHttpRequest();\n    if (!('overrideMimeType' in xhr)) {\n      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n      });\n    }\n    if ('responseType' in xhr) {\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'responseType', {\n      get: function xmlHttpRequestGetResponseType() {\n        return this._responseType || 'text';\n      },\n      set: function xmlHttpRequestSetResponseType(value) {\n        if (value === 'text' || value === 'arraybuffer') {\n          this._responseType = value;\n          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n            this.overrideMimeType('text/plain; charset=x-user-defined');\n          }\n        }\n      }\n    });\n    Object.defineProperty(xhrPrototype, 'response', {\n      get: function xmlHttpRequestResponseGet() {\n        if (this.responseType !== 'arraybuffer') {\n          return this.responseText;\n        }\n        var text = this.responseText;\n        var i,\n            n = text.length;\n        var result = new Uint8Array(n);\n        for (i = 0; i < n; ++i) {\n          result[i] = text.charCodeAt(i) & 0xFF;\n        }\n        return result.buffer;\n      }\n    });\n  })();\n  (function checkDatasetProperty() {\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('dataset' in div) {\n      return;\n    }\n    Object.defineProperty(HTMLElement.prototype, 'dataset', {\n      get: function get() {\n        if (this._dataset) {\n          return this._dataset;\n        }\n        var dataset = {};\n        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n          var attribute = this.attributes[j];\n          if (attribute.name.substring(0, 5) !== 'data-') {\n            continue;\n          }\n          var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n            return ch.toUpperCase();\n          });\n          dataset[key] = attribute.value;\n        }\n        Object.defineProperty(this, '_dataset', {\n          value: dataset,\n          writable: false,\n          enumerable: false\n        });\n        return dataset;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      PDFJS.disableCreateObjectURL = true;\n    }\n  })();\n  (function checkNavigatorLanguage() {\n    if (typeof navigator === 'undefined') {\n      return;\n    }\n    if ('language' in navigator) {\n      return;\n    }\n    PDFJS.locale = navigator.userLanguage || 'en-US';\n  })();\n  (function checkRangeRequests() {\n    if (isSafari || isIOS) {\n      PDFJS.disableRange = true;\n      PDFJS.disableStream = true;\n    }\n  })();\n  (function checkSetPresenceInImageData() {\n    if (!hasDOM) {\n      return;\n    }\n    if (window.CanvasPixelArray) {\n      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n        window.CanvasPixelArray.prototype.set = function (arr) {\n          for (var i = 0, ii = this.length; i < ii; i++) {\n            this[i] = arr[i];\n          }\n        };\n      }\n    } else {\n      var polyfill = false,\n          versionMatch;\n      if (isChrome) {\n        versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n      } else if (isAndroid) {\n        polyfill = isAndroidPre5;\n      } else if (isSafari) {\n        versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n      }\n      if (polyfill) {\n        var contextPrototype = window.CanvasRenderingContext2D.prototype;\n        var createImageData = contextPrototype.createImageData;\n        contextPrototype.createImageData = function (w, h) {\n          var imageData = createImageData.call(this, w, h);\n          imageData.data.set = function (arr) {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n              this[i] = arr[i];\n            }\n          };\n          return imageData;\n        };\n        contextPrototype = null;\n      }\n    }\n  })();\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      PDFJS.maxCanvasPixels = 5242880;\n    }\n  })();\n  (function checkFullscreenSupport() {\n    if (!hasDOM) {\n      return;\n    }\n    if (isIE && window.parent !== window) {\n      PDFJS.disableFullscreen = true;\n    }\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkInputTypeNumberAssign() {\n    if (!hasDOM) {\n      return;\n    }\n    var el = document.createElement('input');\n    try {\n      el.type = 'number';\n    } catch (ex) {\n      var inputProto = el.constructor.prototype;\n      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n      Object.defineProperty(inputProto, 'type', {\n        get: function get() {\n          return typeProperty.get.call(this);\n        },\n        set: function set(value) {\n          typeProperty.set.call(this, value === 'number' ? 'text' : value);\n        },\n\n        enumerable: true,\n        configurable: true\n      });\n    }\n  })();\n  (function checkDocumentReadyState() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!document.attachEvent) {\n      return;\n    }\n    var documentProto = document.constructor.prototype;\n    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n    Object.defineProperty(documentProto, 'readyState', {\n      get: function get() {\n        var value = readyStateProto.get.call(this);\n        return value === 'interactive' ? 'loading' : value;\n      },\n      set: function set(value) {\n        readyStateProto.set.call(this, value);\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(75);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    Array.prototype.includes = __w_pdfjs_require__(80);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(82);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(84);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(87);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(105);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n}\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(76);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $values = __w_pdfjs_require__(77)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar toIObject = __w_pdfjs_require__(17);\nvar isEnum = __w_pdfjs_require__(34).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toIObject = __w_pdfjs_require__(17);\nvar arrayIndexOf = __w_pdfjs_require__(46)(false);\nvar IE_PROTO = __w_pdfjs_require__(33)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(81);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $includes = __w_pdfjs_require__(46)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(49)('includes');\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(85);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(86) });\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(88);\n__w_pdfjs_require__(54);\n__w_pdfjs_require__(96);\n__w_pdfjs_require__(103);\n__w_pdfjs_require__(104);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(89)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(91);\nvar descriptor = __w_pdfjs_require__(28);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(92);\nvar enumBugKeys = __w_pdfjs_require__(48);\nvar IE_PROTO = __w_pdfjs_require__(33)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(27)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(53).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(23);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toObject = __w_pdfjs_require__(36);\nvar IE_PROTO = __w_pdfjs_require__(33)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(49);\nvar step = __w_pdfjs_require__(95);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(17);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(5);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(35);\nvar $export = __w_pdfjs_require__(6);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(16);\nvar anInstance = __w_pdfjs_require__(37);\nvar forOf = __w_pdfjs_require__(25);\nvar speciesConstructor = __w_pdfjs_require__(55);\nvar task = __w_pdfjs_require__(56).set;\nvar microtask = __w_pdfjs_require__(101)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(38);\nvar perform = __w_pdfjs_require__(57);\nvar promiseResolve = __w_pdfjs_require__(58);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) domain.exit();\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  if (promise._h == 1) return false;\n  var chain = promise._a || promise._c;\n  var i = 0;\n  var reaction;\n  while (chain.length > i) {\n    reaction = chain[i++];\n    if (reaction.fail || !isUnhandled(reaction.promise)) return false;\n  }\n  return true;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(39)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(24)($Promise, PROMISE);\n__w_pdfjs_require__(102)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(59)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(35);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar macrotask = __w_pdfjs_require__(56).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(18)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar dP = __w_pdfjs_require__(15);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(5);\nvar speciesConstructor = __w_pdfjs_require__(55);\nvar promiseResolve = __w_pdfjs_require__(58);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar newPromiseCapability = __w_pdfjs_require__(38);\nvar perform = __w_pdfjs_require__(57);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(54);\n__w_pdfjs_require__(106);\n__w_pdfjs_require__(117);\n__w_pdfjs_require__(119);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(60)(0);\nvar redefine = __w_pdfjs_require__(10);\nvar meta = __w_pdfjs_require__(40);\nvar assign = __w_pdfjs_require__(110);\nvar weak = __w_pdfjs_require__(112);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(61);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(113)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(108);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(109);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar gOPS = __w_pdfjs_require__(111);\nvar pIE = __w_pdfjs_require__(34);\nvar toObject = __w_pdfjs_require__(36);\nvar IObject = __w_pdfjs_require__(29);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(39);\nvar getWeak = __w_pdfjs_require__(40).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(37);\nvar forOf = __w_pdfjs_require__(25);\nvar createArrayMethod = __w_pdfjs_require__(60);\nvar $has = __w_pdfjs_require__(9);\nvar validate = __w_pdfjs_require__(61);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar redefineAll = __w_pdfjs_require__(39);\nvar meta = __w_pdfjs_require__(40);\nvar forOf = __w_pdfjs_require__(25);\nvar anInstance = __w_pdfjs_require__(37);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(59);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar inheritIfRequired = __w_pdfjs_require__(114);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(115).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(116).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(34);\nvar createDesc = __w_pdfjs_require__(28);\nvar toIObject = __w_pdfjs_require__(17);\nvar toPrimitive = __w_pdfjs_require__(45);\nvar has = __w_pdfjs_require__(9);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(44);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(118)('WeakMap');\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(120)('WeakMap');\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar aFunction = __w_pdfjs_require__(16);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(25);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(122).ReadableStream;\n}\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(62);\n\nvar _document = __w_pdfjs_require__(124);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    throw new Error('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(63);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _annotation = __w_pdfjs_require__(131);\n\nvar _crypto = __w_pdfjs_require__(66);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(132);\n\nvar _function = __w_pdfjs_require__(70);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(126);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jbig = __w_pdfjs_require__(128);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(64);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      throw new Jbig2Error('MMR encoding is not supported');\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0;\n      while (true) {\n        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n        }\n        newSymbols.push(bitmap);\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n        var t = stripSize * stripT + currentT;\n        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    at.push({\n      x: -patternWidth,\n      y: 0\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var grayScaleBitPlanes = [];\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        if (textRegion.huffman) {\n          throw new Jbig2Error('huffman is not supported');\n        }\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2(data, start, end) {\n    var position = start;\n    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n      throw new Jbig2Error('invalid header');\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    readSegments(header, data, position, end);\n    throw new Error('Not implemented');\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables;\n      if (dictionary.huffman) {\n        throw new Jbig2Error('huffman is not supported');\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    }\n  };\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              component.blockData[offset + z] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpx = __w_pdfjs_require__(65);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(63);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(2);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(134);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(69);\n\nvar _standard_fonts = __w_pdfjs_require__(68);\n\nvar _pattern = __w_pdfjs_require__(138);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _bidi = __w_pdfjs_require__(139);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(70);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(142);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(143);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        return Promise.resolve(properties.toUnicode);\n      }\n      var toUnicode, charcode, glyphName;\n      if (!properties.composite) {\n        toUnicode = [];\n        var encoding = properties.defaultEncoding.slice();\n        var baseEncodingName = properties.baseEncodingName;\n        var differences = properties.differences;\n        for (charcode in differences) {\n          glyphName = differences[charcode];\n          if (glyphName === '.notdef') {\n            continue;\n          }\n          encoding[charcode] = glyphName;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        for (charcode in encoding) {\n          glyphName = encoding[charcode];\n          if (glyphName === '') {\n            continue;\n          } else if (glyphsUnicodeMap[glyphName] === undefined) {\n            var code = 0;\n            switch (glyphName[0]) {\n              case 'G':\n                if (glyphName.length === 3) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'g':\n                if (glyphName.length === 5) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'C':\n              case 'c':\n                if (glyphName.length >= 3) {\n                  code = +glyphName.substr(1);\n                }\n                break;\n              default:\n                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n                if (unicode !== -1) {\n                  code = unicode;\n                }\n            }\n            if (code) {\n              if (baseEncodingName && code === +charcode) {\n                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                  continue;\n                }\n              }\n              toUnicode[charcode] = String.fromCharCode(code);\n            }\n            continue;\n          }\n          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n        }\n        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      throw new Error('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      throw new Error('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      throw new Error('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      throw new Error('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      throw new Error('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(67);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(68);\n\nvar _unicode = __w_pdfjs_require__(69);\n\nvar _font_renderer = __w_pdfjs_require__(136);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _type1_parser = __w_pdfjs_require__(137);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap(cmap) {\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      throw new Error('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      var header = readOpenTypeHeader(font);\n      var numTables = header.numTables;\n      var cff, cffFile;\n      var tables = Object.create(null);\n      tables['OS/2'] = null;\n      tables['cmap'] = null;\n      tables['head'] = null;\n      tables['hhea'] = null;\n      tables['hmtx'] = null;\n      tables['maxp'] = null;\n      tables['name'] = null;\n      tables['post'] = null;\n      var table;\n      for (var i = 0; i < numTables; i++) {\n        table = readTableEntry(font);\n        if (VALID_TABLES.indexOf(table.tag) < 0) {\n          continue;\n        }\n        if (table.length === 0) {\n          continue;\n        }\n        tables[table.tag] = table;\n      }\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n          }\n        } else {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCode = cmapMappings[i].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(67);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      throw new Error('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    throw new Error('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      throw new Error('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(65);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n          imgData.kind = _util.ImageKind.RGB_24BPP;\n          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n          return imgData;\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/process/browser.js\"), __webpack_require__(\"./node_modules/webpack/buildin/global.js\")))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.index.js","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 71);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(73);\n\nvar _streams_polyfill = __w_pdfjs_require__(121);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n  verbosity = level;\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  var n = 1,\n      i = 0;\n  while (x > n) {\n    n <<= 1;\n    i++;\n  }\n  return i;\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return getArray ? dict.getArray(name) : dict.get(name);\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar StatTimer = function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length) {\n      str += pad;\n    }\n    return str;\n  }\n  function StatTimer() {\n    this.started = Object.create(null);\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (name in this.started) {\n        warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (!(name in this.started)) {\n        warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  };\n  img.onerror = function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  };\n  img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(47)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(5).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(10);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar createDesc = __w_pdfjs_require__(28);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(44);\nvar toPrimitive = __w_pdfjs_require__(45);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(29);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    throw new Error('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      throw new Error('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      throw new Error('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      throw new Error('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\n    if ((0, _primitives.isName)(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if ((0, _primitives.isDict)(colorSpaces)) {\n        var refcs = colorSpaces.get(cs.name);\n        if (refcs) {\n          cs = refcs;\n        }\n      }\n    }\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(78);\nvar enumBugKeys = __w_pdfjs_require__(48);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(15).f;\nvar has = __w_pdfjs_require__(9);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(97);\nvar isArrayIter = __w_pdfjs_require__(98);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(99);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(125);\n\nvar _jbig2_stream = __w_pdfjs_require__(127);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(130);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(5).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(47)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(10);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(9);\nvar setDesc = __w_pdfjs_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(129);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getBytes = function (length) {\n    this.readBlock();\n    return this.buffer;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(27)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(17);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(79);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(35);\nvar test = {};\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(10)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(90);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar getPrototypeOf = __w_pdfjs_require__(93);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(5).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(94);\nvar getKeys = __w_pdfjs_require__(23);\nvar redefine = __w_pdfjs_require__(10);\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(4);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(16);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(100);\nvar html = __w_pdfjs_require__(53);\nvar cel = __w_pdfjs_require__(27);\nvar global = __w_pdfjs_require__(5);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(18)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(38);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(29);\nvar toObject = __w_pdfjs_require__(36);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(107);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _chunked_stream = __w_pdfjs_require__(62);\n\nvar _crypto = __w_pdfjs_require__(66);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    throw new Error('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(64);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 1]\n                };\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(135);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(141);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    throw new Error('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.169';\nvar pdfjsBuild = 'fbf456f5';\nvar pdfjsCoreWorker = __w_pdfjs_require__(72);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(123);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.169';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        var numPagesPromise = pdfManager.ensureDoc('numPages');\n        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\n          var doc = {\n            numPages: results[0],\n            fingerprint: results[1],\n            encrypted: !!results[2]\n          };\n          loadDocumentCapability.resolve(doc);\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n  var globalScope = __w_pdfjs_require__(74);\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n  var isAndroid = /Android/.test(userAgent);\n  var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n  var isChrome = userAgent.indexOf('Chrom') >= 0;\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n  var isIE = userAgent.indexOf('Trident') >= 0;\n  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  if (typeof PDFJS === 'undefined') {\n    globalScope.PDFJS = {};\n  }\n  PDFJS.compatibilityChecked = true;\n  (function normalizeURLObject() {\n    if (!globalScope.URL) {\n      globalScope.URL = globalScope.webkitURL;\n    }\n  })();\n  (function checkXMLHttpRequestResponseCompatibility() {\n    if (typeof XMLHttpRequest === 'undefined') {\n      return;\n    }\n    var xhrPrototype = XMLHttpRequest.prototype;\n    var xhr = new XMLHttpRequest();\n    if (!('overrideMimeType' in xhr)) {\n      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n      });\n    }\n    if ('responseType' in xhr) {\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'responseType', {\n      get: function xmlHttpRequestGetResponseType() {\n        return this._responseType || 'text';\n      },\n      set: function xmlHttpRequestSetResponseType(value) {\n        if (value === 'text' || value === 'arraybuffer') {\n          this._responseType = value;\n          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n            this.overrideMimeType('text/plain; charset=x-user-defined');\n          }\n        }\n      }\n    });\n    Object.defineProperty(xhrPrototype, 'response', {\n      get: function xmlHttpRequestResponseGet() {\n        if (this.responseType !== 'arraybuffer') {\n          return this.responseText;\n        }\n        var text = this.responseText;\n        var i,\n            n = text.length;\n        var result = new Uint8Array(n);\n        for (i = 0; i < n; ++i) {\n          result[i] = text.charCodeAt(i) & 0xFF;\n        }\n        return result.buffer;\n      }\n    });\n  })();\n  (function checkDatasetProperty() {\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('dataset' in div) {\n      return;\n    }\n    Object.defineProperty(HTMLElement.prototype, 'dataset', {\n      get: function get() {\n        if (this._dataset) {\n          return this._dataset;\n        }\n        var dataset = {};\n        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n          var attribute = this.attributes[j];\n          if (attribute.name.substring(0, 5) !== 'data-') {\n            continue;\n          }\n          var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n            return ch.toUpperCase();\n          });\n          dataset[key] = attribute.value;\n        }\n        Object.defineProperty(this, '_dataset', {\n          value: dataset,\n          writable: false,\n          enumerable: false\n        });\n        return dataset;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      PDFJS.disableCreateObjectURL = true;\n    }\n  })();\n  (function checkNavigatorLanguage() {\n    if (typeof navigator === 'undefined') {\n      return;\n    }\n    if ('language' in navigator) {\n      return;\n    }\n    PDFJS.locale = navigator.userLanguage || 'en-US';\n  })();\n  (function checkRangeRequests() {\n    if (isSafari || isIOS) {\n      PDFJS.disableRange = true;\n      PDFJS.disableStream = true;\n    }\n  })();\n  (function checkSetPresenceInImageData() {\n    if (!hasDOM) {\n      return;\n    }\n    if (window.CanvasPixelArray) {\n      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n        window.CanvasPixelArray.prototype.set = function (arr) {\n          for (var i = 0, ii = this.length; i < ii; i++) {\n            this[i] = arr[i];\n          }\n        };\n      }\n    } else {\n      var polyfill = false,\n          versionMatch;\n      if (isChrome) {\n        versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n      } else if (isAndroid) {\n        polyfill = isAndroidPre5;\n      } else if (isSafari) {\n        versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n      }\n      if (polyfill) {\n        var contextPrototype = window.CanvasRenderingContext2D.prototype;\n        var createImageData = contextPrototype.createImageData;\n        contextPrototype.createImageData = function (w, h) {\n          var imageData = createImageData.call(this, w, h);\n          imageData.data.set = function (arr) {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n              this[i] = arr[i];\n            }\n          };\n          return imageData;\n        };\n        contextPrototype = null;\n      }\n    }\n  })();\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      PDFJS.maxCanvasPixels = 5242880;\n    }\n  })();\n  (function checkFullscreenSupport() {\n    if (!hasDOM) {\n      return;\n    }\n    if (isIE && window.parent !== window) {\n      PDFJS.disableFullscreen = true;\n    }\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkInputTypeNumberAssign() {\n    if (!hasDOM) {\n      return;\n    }\n    var el = document.createElement('input');\n    try {\n      el.type = 'number';\n    } catch (ex) {\n      var inputProto = el.constructor.prototype;\n      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n      Object.defineProperty(inputProto, 'type', {\n        get: function get() {\n          return typeProperty.get.call(this);\n        },\n        set: function set(value) {\n          typeProperty.set.call(this, value === 'number' ? 'text' : value);\n        },\n\n        enumerable: true,\n        configurable: true\n      });\n    }\n  })();\n  (function checkDocumentReadyState() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!document.attachEvent) {\n      return;\n    }\n    var documentProto = document.constructor.prototype;\n    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n    Object.defineProperty(documentProto, 'readyState', {\n      get: function get() {\n        var value = readyStateProto.get.call(this);\n        return value === 'interactive' ? 'loading' : value;\n      },\n      set: function set(value) {\n        readyStateProto.set.call(this, value);\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(75);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    Array.prototype.includes = __w_pdfjs_require__(80);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(82);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(84);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(87);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(105);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n}\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(76);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $values = __w_pdfjs_require__(77)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar toIObject = __w_pdfjs_require__(17);\nvar isEnum = __w_pdfjs_require__(34).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toIObject = __w_pdfjs_require__(17);\nvar arrayIndexOf = __w_pdfjs_require__(46)(false);\nvar IE_PROTO = __w_pdfjs_require__(33)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(81);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $includes = __w_pdfjs_require__(46)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(49)('includes');\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(85);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(86) });\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(88);\n__w_pdfjs_require__(54);\n__w_pdfjs_require__(96);\n__w_pdfjs_require__(103);\n__w_pdfjs_require__(104);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(89)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(91);\nvar descriptor = __w_pdfjs_require__(28);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(92);\nvar enumBugKeys = __w_pdfjs_require__(48);\nvar IE_PROTO = __w_pdfjs_require__(33)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(27)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(53).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(23);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toObject = __w_pdfjs_require__(36);\nvar IE_PROTO = __w_pdfjs_require__(33)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(49);\nvar step = __w_pdfjs_require__(95);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(17);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(5);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(35);\nvar $export = __w_pdfjs_require__(6);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(16);\nvar anInstance = __w_pdfjs_require__(37);\nvar forOf = __w_pdfjs_require__(25);\nvar speciesConstructor = __w_pdfjs_require__(55);\nvar task = __w_pdfjs_require__(56).set;\nvar microtask = __w_pdfjs_require__(101)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(38);\nvar perform = __w_pdfjs_require__(57);\nvar promiseResolve = __w_pdfjs_require__(58);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) domain.exit();\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  if (promise._h == 1) return false;\n  var chain = promise._a || promise._c;\n  var i = 0;\n  var reaction;\n  while (chain.length > i) {\n    reaction = chain[i++];\n    if (reaction.fail || !isUnhandled(reaction.promise)) return false;\n  }\n  return true;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(39)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(24)($Promise, PROMISE);\n__w_pdfjs_require__(102)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(59)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(35);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar macrotask = __w_pdfjs_require__(56).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(18)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar dP = __w_pdfjs_require__(15);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(5);\nvar speciesConstructor = __w_pdfjs_require__(55);\nvar promiseResolve = __w_pdfjs_require__(58);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar newPromiseCapability = __w_pdfjs_require__(38);\nvar perform = __w_pdfjs_require__(57);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(54);\n__w_pdfjs_require__(106);\n__w_pdfjs_require__(117);\n__w_pdfjs_require__(119);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(60)(0);\nvar redefine = __w_pdfjs_require__(10);\nvar meta = __w_pdfjs_require__(40);\nvar assign = __w_pdfjs_require__(110);\nvar weak = __w_pdfjs_require__(112);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(61);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(113)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(108);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(109);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar gOPS = __w_pdfjs_require__(111);\nvar pIE = __w_pdfjs_require__(34);\nvar toObject = __w_pdfjs_require__(36);\nvar IObject = __w_pdfjs_require__(29);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(39);\nvar getWeak = __w_pdfjs_require__(40).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(37);\nvar forOf = __w_pdfjs_require__(25);\nvar createArrayMethod = __w_pdfjs_require__(60);\nvar $has = __w_pdfjs_require__(9);\nvar validate = __w_pdfjs_require__(61);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar redefineAll = __w_pdfjs_require__(39);\nvar meta = __w_pdfjs_require__(40);\nvar forOf = __w_pdfjs_require__(25);\nvar anInstance = __w_pdfjs_require__(37);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(59);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar inheritIfRequired = __w_pdfjs_require__(114);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(115).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(116).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(34);\nvar createDesc = __w_pdfjs_require__(28);\nvar toIObject = __w_pdfjs_require__(17);\nvar toPrimitive = __w_pdfjs_require__(45);\nvar has = __w_pdfjs_require__(9);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(44);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(118)('WeakMap');\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(120)('WeakMap');\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar aFunction = __w_pdfjs_require__(16);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(25);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(122).ReadableStream;\n}\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(62);\n\nvar _document = __w_pdfjs_require__(124);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    throw new Error('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(63);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _annotation = __w_pdfjs_require__(131);\n\nvar _crypto = __w_pdfjs_require__(66);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(132);\n\nvar _function = __w_pdfjs_require__(70);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(126);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jbig = __w_pdfjs_require__(128);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(64);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      throw new Jbig2Error('MMR encoding is not supported');\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0;\n      while (true) {\n        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n        }\n        newSymbols.push(bitmap);\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n        var t = stripSize * stripT + currentT;\n        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    at.push({\n      x: -patternWidth,\n      y: 0\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var grayScaleBitPlanes = [];\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        if (textRegion.huffman) {\n          throw new Jbig2Error('huffman is not supported');\n        }\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2(data, start, end) {\n    var position = start;\n    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n      throw new Jbig2Error('invalid header');\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    readSegments(header, data, position, end);\n    throw new Error('Not implemented');\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables;\n      if (dictionary.huffman) {\n        throw new Jbig2Error('huffman is not supported');\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    }\n  };\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              component.blockData[offset + z] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpx = __w_pdfjs_require__(65);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(63);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(2);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(134);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(69);\n\nvar _standard_fonts = __w_pdfjs_require__(68);\n\nvar _pattern = __w_pdfjs_require__(138);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _bidi = __w_pdfjs_require__(139);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(70);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(142);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(143);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        return Promise.resolve(properties.toUnicode);\n      }\n      var toUnicode, charcode, glyphName;\n      if (!properties.composite) {\n        toUnicode = [];\n        var encoding = properties.defaultEncoding.slice();\n        var baseEncodingName = properties.baseEncodingName;\n        var differences = properties.differences;\n        for (charcode in differences) {\n          glyphName = differences[charcode];\n          if (glyphName === '.notdef') {\n            continue;\n          }\n          encoding[charcode] = glyphName;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        for (charcode in encoding) {\n          glyphName = encoding[charcode];\n          if (glyphName === '') {\n            continue;\n          } else if (glyphsUnicodeMap[glyphName] === undefined) {\n            var code = 0;\n            switch (glyphName[0]) {\n              case 'G':\n                if (glyphName.length === 3) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'g':\n                if (glyphName.length === 5) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'C':\n              case 'c':\n                if (glyphName.length >= 3) {\n                  code = +glyphName.substr(1);\n                }\n                break;\n              default:\n                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n                if (unicode !== -1) {\n                  code = unicode;\n                }\n            }\n            if (code) {\n              if (baseEncodingName && code === +charcode) {\n                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                  continue;\n                }\n              }\n              toUnicode[charcode] = String.fromCharCode(code);\n            }\n            continue;\n          }\n          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n        }\n        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      throw new Error('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      throw new Error('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      throw new Error('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      throw new Error('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      throw new Error('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(67);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(68);\n\nvar _unicode = __w_pdfjs_require__(69);\n\nvar _font_renderer = __w_pdfjs_require__(136);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _type1_parser = __w_pdfjs_require__(137);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap(cmap) {\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      throw new Error('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      var header = readOpenTypeHeader(font);\n      var numTables = header.numTables;\n      var cff, cffFile;\n      var tables = Object.create(null);\n      tables['OS/2'] = null;\n      tables['cmap'] = null;\n      tables['head'] = null;\n      tables['hhea'] = null;\n      tables['hmtx'] = null;\n      tables['maxp'] = null;\n      tables['name'] = null;\n      tables['post'] = null;\n      var table;\n      for (var i = 0; i < numTables; i++) {\n        table = readTableEntry(font);\n        if (VALID_TABLES.indexOf(table.tag) < 0) {\n          continue;\n        }\n        if (table.length === 0) {\n          continue;\n        }\n        tables[table.tag] = table;\n      }\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n          }\n        } else {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCode = cmapMappings[i].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(67);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      throw new Error('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    throw new Error('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      throw new Error('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(65);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n          imgData.kind = _util.ImageKind.RGB_24BPP;\n          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n          return imgData;\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module id = ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module chunks = 0"],"sourceRoot":""}